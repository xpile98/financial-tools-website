{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ywcho\\\\Desktop\\\\React\\\\financial-tools-website\\\\src\\\\components\\\\AveragePriceCalculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Typography, TextField, Button, Box } from '@mui/material';\nimport CalculatorLayout from './CalculatorLayout';\nimport { formatCurrency, formatNumberWithCommas, parseFormattedNumber } from '../utils/currencyUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AveragePriceCalculator = () => {\n  _s();\n  const [currentAvgPrice, setCurrentAvgPrice] = useState('');\n  const [currentQuantity, setCurrentQuantity] = useState('');\n  const [currentPrice, setCurrentPrice] = useState('');\n  const [targetAvgPrice, setTargetAvgPrice] = useState('');\n  const [result, setResult] = useState(null);\n  const [currency, setCurrency] = useState('KRW');\n  const handleAmountChange = setter => event => {\n    const value = event.target.value;\n    const numericValue = parseFormattedNumber(value);\n    setter(formatNumberWithCommas(numericValue));\n  };\n  const calculateAveragePrice = () => {\n    const avgPrice = parseFloat(parseFormattedNumber(currentAvgPrice));\n    const quantity = parseFloat(parseFormattedNumber(currentQuantity));\n    const price = parseFloat(parseFormattedNumber(currentPrice));\n    const targetAvg = parseFloat(parseFormattedNumber(targetAvgPrice));\n    if (avgPrice > 0 && quantity > 0 && price > 0 && targetAvg > 0 && targetAvg < avgPrice) {\n      // 새로운 공식 적용\n      const additionalQuantity = quantity * (avgPrice - targetAvg) / (targetAvg - price);\n      const additionalCost = additionalQuantity * price;\n      setResult({\n        additionalQuantity: Math.ceil(additionalQuantity),\n        additionalCost: Math.ceil(additionalCost)\n      });\n    } else {\n      alert('입력값을 확인해주세요. 목표 평단가는 현재 평단가보다 작아야 합니다.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(CalculatorLayout, {\n    currency: currency,\n    onCurrencyChange: setCurrency,\n    title: \"\\uD3C9\\uB2E8\\uAC00 \\uACC4\\uC0B0\\uAE30\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      noValidate: true,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"\\uD604\\uC7AC \\uD3C9\\uB2E8\\uAC00\",\n        value: currentAvgPrice,\n        onChange: handleAmountChange(setCurrentAvgPrice),\n        fullWidth: true,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"\\uD604\\uC7AC \\uC218\\uB7C9\",\n        value: currentQuantity,\n        onChange: handleAmountChange(setCurrentQuantity),\n        fullWidth: true,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"\\uD604\\uC7AC \\uC8FC\\uAC00\",\n        value: currentPrice,\n        onChange: handleAmountChange(setCurrentPrice),\n        fullWidth: true,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"\\uBAA9\\uD45C \\uD3C9\\uB2E8\\uAC00\",\n        value: targetAvgPrice,\n        onChange: handleAmountChange(setTargetAvgPrice),\n        fullWidth: true,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: calculateAveragePrice,\n        sx: {\n          mt: 2\n        },\n        children: \"\\uACC4\\uC0B0\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"\\uACB0\\uACFC:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"\\uD544\\uC694 \\uC218\\uB7C9: \", formatNumberWithCommas(result.additionalQuantity), \"\\uC8FC\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"\\uD544\\uC694 \\uAE08\\uC561: \", formatCurrency(result.additionalCost, currency)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(AveragePriceCalculator, \"eMRrZRjXVxK4BgT+eYT3jw6JZ8M=\");\n_c = AveragePriceCalculator;\nexport default AveragePriceCalculator;\nvar _c;\n$RefreshReg$(_c, \"AveragePriceCalculator\");","map":{"version":3,"names":["React","useState","Typography","TextField","Button","Box","CalculatorLayout","formatCurrency","formatNumberWithCommas","parseFormattedNumber","jsxDEV","_jsxDEV","AveragePriceCalculator","_s","currentAvgPrice","setCurrentAvgPrice","currentQuantity","setCurrentQuantity","currentPrice","setCurrentPrice","targetAvgPrice","setTargetAvgPrice","result","setResult","currency","setCurrency","handleAmountChange","setter","event","value","target","numericValue","calculateAveragePrice","avgPrice","parseFloat","quantity","price","targetAvg","additionalQuantity","additionalCost","Math","ceil","alert","onCurrencyChange","title","children","component","noValidate","autoComplete","label","onChange","fullWidth","margin","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","sx","mt","_c","$RefreshReg$"],"sources":["C:/Users/ywcho/Desktop/React/financial-tools-website/src/components/AveragePriceCalculator.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Typography, TextField, Button, Box } from '@mui/material';\r\nimport CalculatorLayout from './CalculatorLayout';\r\nimport { formatCurrency, formatNumberWithCommas, parseFormattedNumber } from '../utils/currencyUtils';\r\n\r\nconst AveragePriceCalculator = () => {\r\n  const [currentAvgPrice, setCurrentAvgPrice] = useState('');\r\n  const [currentQuantity, setCurrentQuantity] = useState('');\r\n  const [currentPrice, setCurrentPrice] = useState('');\r\n  const [targetAvgPrice, setTargetAvgPrice] = useState('');\r\n  const [result, setResult] = useState(null);\r\n  const [currency, setCurrency] = useState('KRW');\r\n\r\n  const handleAmountChange = (setter) => (event) => {\r\n    const value = event.target.value;\r\n    const numericValue = parseFormattedNumber(value);\r\n    setter(formatNumberWithCommas(numericValue));\r\n  };\r\n\r\n  const calculateAveragePrice = () => {\r\n    const avgPrice = parseFloat(parseFormattedNumber(currentAvgPrice));\r\n    const quantity = parseFloat(parseFormattedNumber(currentQuantity));\r\n    const price = parseFloat(parseFormattedNumber(currentPrice));\r\n    const targetAvg = parseFloat(parseFormattedNumber(targetAvgPrice));\r\n\r\n    if (avgPrice > 0 && quantity > 0 && price > 0 && targetAvg > 0 && targetAvg < avgPrice) {\r\n      // 새로운 공식 적용\r\n      const additionalQuantity = (quantity * (avgPrice - targetAvg)) / (targetAvg - price);\r\n      const additionalCost = additionalQuantity * price;\r\n\r\n      setResult({\r\n        additionalQuantity: Math.ceil(additionalQuantity),\r\n        additionalCost: Math.ceil(additionalCost),\r\n      });\r\n    } else {\r\n      alert('입력값을 확인해주세요. 목표 평단가는 현재 평단가보다 작아야 합니다.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CalculatorLayout currency={currency} onCurrencyChange={setCurrency} title=\"평단가 계산기\">\r\n      <Box component=\"form\" noValidate autoComplete=\"off\">\r\n        <TextField\r\n          label=\"현재 평단가\"\r\n          value={currentAvgPrice}\r\n          onChange={handleAmountChange(setCurrentAvgPrice)}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          label=\"현재 수량\"\r\n          value={currentQuantity}\r\n          onChange={handleAmountChange(setCurrentQuantity)}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          label=\"현재 주가\"\r\n          value={currentPrice}\r\n          onChange={handleAmountChange(setCurrentPrice)}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          label=\"목표 평단가\"\r\n          value={targetAvgPrice}\r\n          onChange={handleAmountChange(setTargetAvgPrice)}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <Button variant=\"contained\" onClick={calculateAveragePrice} sx={{ mt: 2 }}>\r\n          계산하기\r\n        </Button>\r\n      </Box>\r\n      {result && (\r\n        <Box sx={{ mt: 2 }}>\r\n          <Typography variant=\"h6\">결과:</Typography>\r\n          <Typography>필요 수량: {formatNumberWithCommas(result.additionalQuantity)}주</Typography>\r\n          <Typography>필요 금액: {formatCurrency(result.additionalCost, currency)}</Typography>\r\n        </Box>\r\n      )}\r\n    </CalculatorLayout>\r\n  );\r\n};\r\n\r\nexport default AveragePriceCalculator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}