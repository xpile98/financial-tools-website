{"ast":null,"code":"export const formatCurrency = (amount, currency = 'KRW') => {\n  const formatter = new Intl.NumberFormat('ko-KR', {\n    style: 'currency',\n    currency: currency,\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0\n  });\n  return formatter.format(amount);\n};\nexport const currencyOptions = [{\n  value: 'KRW',\n  label: '대한민국 원 (₩)'\n}, {\n  value: 'USD',\n  label: '미국 달러 ($)'\n}, {\n  value: 'EUR',\n  label: '유로 (€)'\n}];\nexport const formatNumberWithCommas = value => {\n  const parts = value.toString().split('.');\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  return parts.join('.');\n};\nexport const parseFormattedNumber = value => {\n  return value.replace(/,/g, '');\n};","map":{"version":3,"names":["formatCurrency","amount","currency","formatter","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","format","currencyOptions","value","label","formatNumberWithCommas","parts","toString","split","replace","join","parseFormattedNumber"],"sources":["C:/Users/ywcho/Desktop/React/financial-tools-website/src/utils/currencyUtils.js"],"sourcesContent":["export const formatCurrency = (amount, currency = 'KRW') => {\r\n  const formatter = new Intl.NumberFormat('ko-KR', {\r\n    style: 'currency',\r\n    currency: currency,\r\n    minimumFractionDigits: 0,\r\n    maximumFractionDigits: 0,\r\n  });\r\n  return formatter.format(amount);\r\n};\r\n\r\nexport const currencyOptions = [\r\n  { value: 'KRW', label: '대한민국 원 (₩)' },\r\n  { value: 'USD', label: '미국 달러 ($)' },\r\n  { value: 'EUR', label: '유로 (€)' },\r\n];\r\n\r\nexport const formatNumberWithCommas = (value) => {\r\n  const parts = value.toString().split('.');\r\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n  return parts.join('.');\r\n};\r\n\r\nexport const parseFormattedNumber = (value) => {\r\n  return value.replace(/,/g, '');\r\n};"],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAGA,CAACC,MAAM,EAAEC,QAAQ,GAAG,KAAK,KAAK;EAC1D,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;IAC/CC,KAAK,EAAE,UAAU;IACjBJ,QAAQ,EAAEA,QAAQ;IAClBK,qBAAqB,EAAE,CAAC;IACxBC,qBAAqB,EAAE;EACzB,CAAC,CAAC;EACF,OAAOL,SAAS,CAACM,MAAM,CAACR,MAAM,CAAC;AACjC,CAAC;AAED,OAAO,MAAMS,eAAe,GAAG,CAC7B;EAAEC,KAAK,EAAE,KAAK;EAAEC,KAAK,EAAE;AAAa,CAAC,EACrC;EAAED,KAAK,EAAE,KAAK;EAAEC,KAAK,EAAE;AAAY,CAAC,EACpC;EAAED,KAAK,EAAE,KAAK;EAAEC,KAAK,EAAE;AAAS,CAAC,CAClC;AAED,OAAO,MAAMC,sBAAsB,GAAIF,KAAK,IAAK;EAC/C,MAAMG,KAAK,GAAGH,KAAK,CAACI,QAAQ,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC;EACzCF,KAAK,CAAC,CAAC,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,CAACG,OAAO,CAAC,uBAAuB,EAAE,GAAG,CAAC;EACzD,OAAOH,KAAK,CAACI,IAAI,CAAC,GAAG,CAAC;AACxB,CAAC;AAED,OAAO,MAAMC,oBAAoB,GAAIR,KAAK,IAAK;EAC7C,OAAOA,KAAK,CAACM,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;AAChC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}