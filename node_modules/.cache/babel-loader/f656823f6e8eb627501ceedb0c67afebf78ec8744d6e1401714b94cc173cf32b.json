{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ywcho\\\\Desktop\\\\React\\\\financial-tools-website\\\\src\\\\components\\\\AveragePriceCalculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Typography, TextField, Button, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AveragePriceCalculator = () => {\n  _s();\n  const [currentAvgPrice, setCurrentAvgPrice] = useState('');\n  const [currentQuantity, setCurrentQuantity] = useState('');\n  const [currentPrice, setCurrentPrice] = useState('');\n  const [targetAvgPrice, setTargetAvgPrice] = useState('');\n  const [result, setResult] = useState(null);\n  const calculateAveragePrice = () => {\n    const avgPrice = parseFloat(currentAvgPrice);\n    const quantity = parseFloat(currentQuantity);\n    const price = parseFloat(currentPrice);\n    const targetAvg = parseFloat(targetAvgPrice);\n    if (avgPrice > 0 && quantity > 0 && price > 0 && targetAvg > 0) {\n      const totalCost = avgPrice * quantity;\n      const targetTotalCost = targetAvg * quantity;\n      const additionalCost = targetTotalCost - totalCost;\n      const additionalQuantity = additionalCost / price;\n      setResult({\n        additionalQuantity: Math.ceil(additionalQuantity),\n        additionalCost: (Math.ceil(additionalQuantity) * price).toFixed(2)\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"\\uD3C9\\uB2E8\\uAC00 \\uACC4\\uC0B0\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      noValidate: true,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"\\uD604\\uC7AC \\uD3C9\\uB2E8\\uAC00\",\n        type: \"number\",\n        value: currentAvgPrice,\n        onChange: e => setCurrentAvgPrice(e.target.value),\n        fullWidth: true,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"\\uD604\\uC7AC \\uC218\\uB7C9\",\n        type: \"number\",\n        value: currentQuantity,\n        onChange: e => setCurrentQuantity(e.target.value),\n        fullWidth: true,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"\\uD604\\uC7AC \\uC8FC\\uAC00\",\n        type: \"number\",\n        value: currentPrice,\n        onChange: e => setCurrentPrice(e.target.value),\n        fullWidth: true,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"\\uBAA9\\uD45C \\uD3C9\\uB2E8\\uAC00\",\n        type: \"number\",\n        value: targetAvgPrice,\n        onChange: e => setTargetAvgPrice(e.target.value),\n        fullWidth: true,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: calculateAveragePrice,\n        sx: {\n          mt: 2\n        },\n        children: \"\\uACC4\\uC0B0\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"\\uACB0\\uACFC:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"\\uD544\\uC694 \\uC218\\uB7C9: \", result.additionalQuantity, \"\\uC8FC\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"\\uD544\\uC694 \\uAE08\\uC561: \", result.additionalCost, \"\\uC6D0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(AveragePriceCalculator, \"PtkEQPI4uYIyEPtJjS53MCwIoBU=\");\n_c = AveragePriceCalculator;\nexport default AveragePriceCalculator;\nvar _c;\n$RefreshReg$(_c, \"AveragePriceCalculator\");","map":{"version":3,"names":["React","useState","Typography","TextField","Button","Box","jsxDEV","_jsxDEV","AveragePriceCalculator","_s","currentAvgPrice","setCurrentAvgPrice","currentQuantity","setCurrentQuantity","currentPrice","setCurrentPrice","targetAvgPrice","setTargetAvgPrice","result","setResult","calculateAveragePrice","avgPrice","parseFloat","quantity","price","targetAvg","totalCost","targetTotalCost","additionalCost","additionalQuantity","Math","ceil","toFixed","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","component","noValidate","autoComplete","label","type","value","onChange","e","target","fullWidth","margin","onClick","sx","mt","_c","$RefreshReg$"],"sources":["C:/Users/ywcho/Desktop/React/financial-tools-website/src/components/AveragePriceCalculator.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Typography, TextField, Button, Box } from '@mui/material';\r\n\r\nconst AveragePriceCalculator = () => {\r\n  const [currentAvgPrice, setCurrentAvgPrice] = useState('');\r\n  const [currentQuantity, setCurrentQuantity] = useState('');\r\n  const [currentPrice, setCurrentPrice] = useState('');\r\n  const [targetAvgPrice, setTargetAvgPrice] = useState('');\r\n  const [result, setResult] = useState(null);\r\n\r\n  const calculateAveragePrice = () => {\r\n    const avgPrice = parseFloat(currentAvgPrice);\r\n    const quantity = parseFloat(currentQuantity);\r\n    const price = parseFloat(currentPrice);\r\n    const targetAvg = parseFloat(targetAvgPrice);\r\n\r\n    if (avgPrice > 0 && quantity > 0 && price > 0 && targetAvg > 0) {\r\n      const totalCost = avgPrice * quantity;\r\n      const targetTotalCost = targetAvg * quantity;\r\n      const additionalCost = targetTotalCost - totalCost;\r\n      const additionalQuantity = additionalCost / price;\r\n\r\n      setResult({\r\n        additionalQuantity: Math.ceil(additionalQuantity),\r\n        additionalCost: (Math.ceil(additionalQuantity) * price).toFixed(2),\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        평단가 계산기\r\n      </Typography>\r\n      <Box component=\"form\" noValidate autoComplete=\"off\">\r\n        <TextField\r\n          label=\"현재 평단가\"\r\n          type=\"number\"\r\n          value={currentAvgPrice}\r\n          onChange={(e) => setCurrentAvgPrice(e.target.value)}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          label=\"현재 수량\"\r\n          type=\"number\"\r\n          value={currentQuantity}\r\n          onChange={(e) => setCurrentQuantity(e.target.value)}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          label=\"현재 주가\"\r\n          type=\"number\"\r\n          value={currentPrice}\r\n          onChange={(e) => setCurrentPrice(e.target.value)}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          label=\"목표 평단가\"\r\n          type=\"number\"\r\n          value={targetAvgPrice}\r\n          onChange={(e) => setTargetAvgPrice(e.target.value)}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <Button variant=\"contained\" onClick={calculateAveragePrice} sx={{ mt: 2 }}>\r\n          계산하기\r\n        </Button>\r\n      </Box>\r\n      {result && (\r\n        <Box sx={{ mt: 2 }}>\r\n          <Typography variant=\"h6\">결과:</Typography>\r\n          <Typography>필요 수량: {result.additionalQuantity}주</Typography>\r\n          <Typography>필요 금액: {result.additionalCost}원</Typography>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AveragePriceCalculator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}